; MUSIC BOX
; Author(s): Omar A. Madriz Almanza; Salvador Cortez Gonzalez; Mariana Chavez Medina
; ITESO

T2CON   EQU 0C8H
RCAP2L  EQU 0CAH
RCAP2H  EQU 0CBH
TL2		EQU	0CCH
TH2		EQU	0CDH
TR2		EQU 0CAH
TF2		EQU 0CFH
PLI		EQU	20H
PLF		EQU	49H

		ORG 0000H
		JMP MAIN
		ORG 0023H
		LJMP SEISR
		ORG 002BH
		LJMP T2ISR
		ORG 0003H
		LJMP E0ISR
		
		ORG 0030H

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

MAIN:	//Limpieza de variables
		MOV R0, #00H
		MOV R1, #PLI
		MOV R2, #00H
		MOV R3, #00H
		MOV R4, #00H
		MOV R5, #00H
		MOV R6, #00H
		MOV R7, #00H
		

		ACALL LIMPIAMEM
		CLR P1.0
		CLR P1.1
		
		MOV SP, #65H 		; SE MUEVE STACKPOINTER A ZONA SEGURA
		MOV SCON, #50H		
		MOV TMOD, #20H 		; SE ACTIVA T1 EN MODO 16 BITS
		MOV TH1, #0FDH 		; T! AUTORECARGA PARA BAUDRATE DE 9600 bps
		MOV TL1, #(-3)		;VALOR BAJO DE AUTORECARGA 
		SETB TR1			;INICIA CONTEO DE T1
		MOV IE, #0B1H 
		MOV IP, #20H
		
		SJMP $
			
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////			
			
SEISR:	
		JNB RI, $			;ESPERA LA BANDERA DE RECEPCIÓN 
		MOV A, SBUF			;ALMACENA EN EL ACUMULADOR EL VALOR DEL BUFER
		CLR RI				;LIMPIA LA BANDERA DE RECEPCION SERIAL PARA VOLVER A RECIBIR
		CJNE R1, #PLF, VE
		MOV R1, #PLI
VE:		MOV @R1, A 
		INC R1
		MOV P2, A
		RETI

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

T2ISR: 
		CLR PSW.4			;CAMBIA A BANCO DE REGISTROS 1
		SETB PSW.3			;CAMBIA A BANCO DE REGISTROS 1
		//CICLO GENERADOR DE PWM
		CJNE R1, #0FFH, CLKRED2
		MOV R1, #00H
		JMP FINI
CLKRED2:CJNE R0, #0FFH, CLKRED
FINI:	CPL P1.0			
		CPL P1.1
		MOV R0, #00H
		INC R1
CLKRED:	INC R0
		CLR PSW.4			;CAMBIA A BANCO DE REGISTROS 0
		CLR PSW.3 			;CAMBIA A BANCO DE REGISTROS 0
		CPL P0.0			;CPL PARA GENERAR LA FRECUENCIA DE AUDIO
		CPL P0.1			;CPL PARA GENERAR LA FRECUENCIA DE AUDIO
		CLR TF2
		SETB T0
		RETI

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

E0ISR:
		ACALL DELAY				;DEBOUNCER 
		ACALL INIT_LEDS			;SETEA VALOR DE LEDS PARA CAMBIAR SU ESTADO 
		MOV R0, #PLI			;ASIGNA EL VALOR INICIAL DE LA LOCALIDAD DE MEMORIA DONDE ESTAN ALMACENADAS LAS NOTAS
SIG:	CJNE @R0, #00H, DECODE	;VERIFICA SI YA SE PROCESARON TODAS LAS NOTAS
		SJMP OFF				;SI YA SE PROCESARON SE SALE DE LA INTERRUPCION
DECODE:	MOV A, @R0				;SE ASIGNA AL ACUMULADOR LA NOTA
		ACALL DECODIFICAR		;DECODIFICA LA NOTA Y ASIGNA AL T2 EL VALOR NECESARIO PARA PRODUCIR LA FRECC CORRECTA
		CLR T0
		JNB T0, $				;ESPERA LA INTERRUPCION DE T2
		CLR T0					;LIMPIA LA BANDERA DE DESBORDE DEL T2
		INC R0					;INCREMENTA PARA IR POR LA SIGUIENTE NOTA
		ACALL COMP_LEDS
		ACALL DELAY
		SJMP SIG				;GENERA UN CICLO PARA RECORRER TODAS LAS NOTAS
OFF:	
		ACALL LIMPIAMEM			;LIMPIA LOS REGISTROS OCUPADOS EN MEMORIA 
		CLR TR2					;DETIENE T2 AL TERMINAR LA REPRODUCCION
		CLR P1.0				;DETIENE MOTORES AL TERMINAR LA REPRODUCCION
		CLR P1.1				;DETIENE MOTORES AL TERMINAR LA REPRODUCCION
		RETI

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DECODIFICAR:
		MOV R4, A			;SE RESPALDA EL VALOR ASCII  	
		MOV R3, #00H		;R3 SERA EL CONTADOR QUE RECORRERÁ LA TABLA
RECORRE:MOV A, R3			;SE LE ASIGNA AL ACUMULADOR LA CUENTA PARA REALIZAR EL DESPLAZAMIENTO EN LA TABLA
		MOV B, #03			;SE MULTIPLICA POR 3d PORQUE LOS VALORES ASCII SE UBICAN CADA 3 LOCALIDADES
		MUL AB			
		MOV B, A			;SE RESPALDA EL RESULTADO PARA ACCEDER AL SIGUIENTE REGISTRO QUE LE CORRESPONDE 
		MOV DPTR, #Tonos	;DPTR APUNTA A LA TABLA
		MOVC A, @A + DPTR	;SE DESPLAZA POR LA TABLA Y SE GUARDA EL VALOR EN EL ACUMULADOR
		SUBB A, R4			;SE RESTA ENTRE EL VALOR ASCII Y EL VALOR VISITADO PARA VALIDAR SI SON IGUALES
		INC R3				;SE INCREMENTA LA CUENTA DEL R3 Y SE VALIDA SI YA RECORRIO TODA LA TABLA
		CJNE R3, #0DH, SIGUE
		SJMP ALB			;SI YA SE RECORRIO TODA LA TABLA SE SALE
SIGUE:	JNZ RECORRE 		;SINO SE SIGUE BUSCANDO EL VALOR
		INC DPTR			;UNA VEZ ENCONTRADO EL VALOR, SE TOMARÁ LA PARTE ALTA DEL VALOR DE AUTORECARGA DE LA FRECUENCIA
		MOV A, B 			;SE ASIGNA LA POSICION CORRESPONDIENTE AL DATO ENCONTRADO
		MOVC A, @A + DPTR	;SE DESPLAZA POR LA TABLA Y GUARDA EL VALOR EN EL ACUMULADOR
		MOV RCAP2H, A 		;ASIGNACION DE VALOR ALTO DE T2
		INC DPTR			;UNA VEZ ASIGNADO EL VALOR ALTO, SE TOMARÁ LA PARTE BAJA DE AUTORECARGA DE LA FRECUENCIA
		MOV A, B 			;SE ASIGNA LA POSICION CORRESPONDIENTE AL DATO ENCONTRADO
		MOVC A, @A + DPTR	;SE DESPLAZA POR LA TABLA Y GUARDA EL VALOR EN EL ACUMULADOR
		MOV RCAP2L, A 		;ASIGNACION DE VALOR BAJO DE T2
		SETB TR2			;INICIA CONTEO DE TIMER2 Y SE ESPERA LA INTERRUPCION
ALB:	
		RET

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DELAY:
		MOV R5, #0AH
CICLOD1:MOV R6, #0FFH
CICLOD2:MOV R7, #0FFH
CICLOD3:DJNZ R7, CICLOD3
		DJNZ R6, CICLOD2
		DJNZ R5, CICLOD1
		RET

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
;TABLAS
Tonos:
	DB 'c', HIGH(0FE40H), LOW(0FE40H), 'C', HIGH(0FE3CH), LOW(0FE3CH), 'd', HIGH(0FE56H), LOW(0FE56H), 'D', HIGH(0FE6EH), LOW(0FE6EH), 'e', HIGH(0FE84H), LOW(0FE84H), 'f', HIGH(0FE99H), LOW(0FE99H), 'F', HIGH(0FEAEH), LOW(0FEAEH), 'g', HIGH(0FEC1H), LOW(0FEC1H), 'G', HIGH(0FED2H), LOW(0FED2H), 'a', HIGH(0FEE3H), LOW(0FEE3H), 'A', HIGH(0FED3H), LOW(0FED3H), 'b', HIGH(0FF02H), LOW(0FF02H)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

LIMPIAMEM:
		MOV R1, #PLI
CICLO:	CJNE R1, #PLF, VAS
		MOV R1, #PLI
		JMP YA
VAS:	MOV @R1, #00H 
		INC R1
		JMP CICLO
YA:		RET

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

INIT_LEDS:
		SETB P2.0
		SETB P2.2
		SETB P2.4
		SETB P2.6
		CLR  P2.1
		CLR  P2.3
		CLR  P2.5
		CLR  P2.7
		RET
		
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

COMP_LEDS:
		CPL P2.0
		CPL P2.1
		CPL P2.2
		CPL P2.3
		CPL P2.4
		CPL P2.5
		CPL P2.6
		CPL P2.7
		RET

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		END